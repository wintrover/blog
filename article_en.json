{
  "article": {
    "title": "How I Built CVFactory: Deploying an AI Cover-Letter Generator with Django & Docker",
    "published": false,
    "body_markdown": "## Hi there!\n\nToday I'd like to share the journey behind my recent side project, **CVFactory**. CVFactory is a web service that takes a job posting and your career history, then uses AI to generate a tailored cover-letter draft.\n\nIn this article I'll walk through **why I started this project** and **what hurdles I faced while turning a small idea into a running service**.\n\n### 1. Motivation — *Why build an AI cover-letter generator?*\n\nEvery developer has at least one \"pet idea\" they want to build someday. For me, that idea was simplifying cover-letter writing.\n\n1. **Automating repetition** — I wrote countless cover letters when job-hunting and noticed how repetitive the process is. I wondered, *could tech remove this tedium?*\n2. **Exploring new tech** — Large Language Models (LLMs) are booming. I wanted a hands-on project that used them in a practical domain like hiring.\n3. **Full-stack practice** — I aimed to own the whole journey: frontend, backend, DB, deployment. It was a good excuse to play with Django, Docker, and Northflank.\n\n### 2. Tech stack & architecture — *How did I build it?*\n\n* **Backend**: Django (auth & routing) + internal FastAPI microservice (LLM inference)\n* **Frontend**: Vanilla HTML / CSS / JavaScript\n* **DB**: SQLite (dev), PostgreSQL (prod)\n* **Deployment**: Docker + Northflank + Cloudflare\n\nA user fills a form on the frontend → Django calls an internal FastAPI microservice → the service hits the AI provider → returns a draft → Django sends it back to the browser. (I'll dive into the FastAPI bits in a follow-up post.) Docker images are built and auto-deployed on Northflank.\n\n### 3. Bumps on the road — *What went wrong?*\n\n#### Static files war in Django\n* **Issue**: CSS & JS worked in `DEBUG=True` but not in `DEBUG=False`.\n* **Fix**: Learned about `STATIC_ROOT`, `collectstatic`, and added **Whitenoise**.\n\n#### Bloated Docker images\n* **Issue**: First image weighed hundreds of MB.\n* **Fix**: Added `.dockerignore`, switched to `python:3.8-slim-buster`, used multi-stage builds.\n\n#### A new PaaS: Northflank\n* **Issue**: After Heroku's pricing change, I needed a free PaaS.\n* **Fix**: Switched to **Northflank**—one of the very few free PaaS providers that still give you always-on hot starts—plus tight GitHub & Docker integration. Created `northflank.json`, and a `purge_cloudflare_cache.py` script to clear CDN cache on deploy.\n\n### 4. Closing thoughts\n\nCVFactory may be small, but building it taught me a ton—from Dockerizing Django to wiring an automated deploy pipeline.\n\nIf you have an idea stuck in your head, start small and ship it. The inevitable \"debugging adventures\" will level up your skills more than any tutorial. Happy coding!",
    "tags": ["ai", "django", "docker", "career"]
  }
} 